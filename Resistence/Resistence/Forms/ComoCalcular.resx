<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>